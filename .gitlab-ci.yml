stages:
  - build
  - deploy
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  OBJECTS_DIRECTORY: "obj"
  # 2) Name of directory used for keeping restored dependencies.
  NUGET_PACKAGES_DIRECTORY: ".nuget"
  # 3) A relative path to the source code from project repository root.
  # NOTE: Please edit this path so it matches the structure of your project!
  SOURCE_CODE_PATH: "*/*/"

cache:
  # Per-stage and per-branch caching.
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    # Specify three paths that should be cached:
    #
    # 1) Main JSON file holding information about package dependency tree, packages versions,
    # frameworks etc. It also holds information where to the dependencies were restored.
    - "$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json"
    # 2) Other NuGet and MSBuild related files. Also needed.
    - "$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*"
    # 3) Path to the directory where restored dependencies are kept.
    - "$NUGET_PACKAGES_DIRECTORY"
    
build_dev:
  # variables:
  #  GIT_STRATEGY: clone
  before_script:
  - docker version
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: build
  script:   
    - docker build --cache-from $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest --tag $CI_COMMIT_REF_NAME:$CI_COMMIT_SHA -f Dockerfile .
    - docker tag $CI_COMMIT_REF_NAME:$CI_COMMIT_SHA $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
    - docker push $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
   
  only:
    - jobbongda.icsoft.vn
  tags:
    - icdemolinux50

deploy_dev:
  variables:
   GIT_STRATEGY: none
  before_script:
  - docker version
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: deploy
  needs: ["build_dev"]
  script:   
    - echo "docker container run -p 8305:8080 --name $CI_COMMIT_REF_NAME -d $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest"
    - docker stop $CI_COMMIT_REF_NAME || true
    - docker rm $CI_COMMIT_REF_NAME || true
    - docker pull $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
    - docker container run -p 8305:8080 --name "$CI_COMMIT_REF_NAME" -d $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
   
  only:
    - jobbongda.icsoft.vn
  tags:
    - icdocker202401

build_prod:
  # variables:
  #  GIT_STRATEGY: clone
  before_script:
  - docker version
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: build
  script:   
    - docker build --cache-from $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest --tag $CI_COMMIT_REF_NAME:$CI_COMMIT_SHA -f Dockerfile.prod .
    - docker tag $CI_COMMIT_REF_NAME:$CI_COMMIT_SHA $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
    - docker push $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
   
  only:
    - job.bongda24h.vn
  tags:
    - icdemolinux50

deploy_prod:
  variables:
   GIT_STRATEGY: none
  before_script:
  - docker version
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: deploy
  needs: ["build_prod"]
  script:   
    - echo "docker container run -p 8306:8080 --name $CI_COMMIT_REF_NAME -d $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest"
    - docker stop $CI_COMMIT_REF_NAME || true
    - docker rm $CI_COMMIT_REF_NAME || true
    - docker pull $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
    - docker container run -p 8306:8080 --name "$CI_COMMIT_REF_NAME" -d $CI_REGISTRY/$CI_COMMIT_REF_NAME:latest
   
  only:
    - job.bongda24h.vn
  tags:
    - icdocker202403

    
