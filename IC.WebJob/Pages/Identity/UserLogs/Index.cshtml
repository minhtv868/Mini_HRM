@page
@using IC.WebJob.Helpers;
@model IC.WebJob.Pages.Identity.UserLogs.IndexModel
@await Component.InvokeAsync("FunctionFavorite")
<div class="card">
	<div class="card-header border-bottom border-200 py-3 py-md-2">
		<div class="d-lg-flex justify-content-between">
			<div class="flex-between-center gy-2">
				<div class="col-auto">
					<form>
						<div class="input-group input-search-width">
							<input class="form-control form-control-sm shadow-none" asp-for="Query.Keywords" type="search" placeholder="Tìm theo tên, IP" aria-label="search" />
							<button class="btn btn-sm btn-outline-secondary border-300 hover-border-secondary">
								<span class="fa fa-search fs--1"></span>
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="card-header py-3 py-md-2">
		<div class="row flex-between-center">
			<div class="col-4 col-sm-auto d-flex align-items-center pe-0">
				@if (Model.PaginatedResult != null && Model.PaginatedResult.TotalCount > 0)
				{
					<h6 class="mb-0 text-nowrap total-rows">Có @Model.PaginatedResult.TotalCount bản ghi</h6>
				}
			</div>
		</div>
	</div>
	<div class="tab-content">
		<div class="fade tab-pane active show" role="tabpanel">
			<div class="card-body p-0">
				<div class="table-responsive scrollbar">
					@if (Model.PaginatedResult != null && Model.PaginatedResult.Data.Any())
					{
						<table class="table table-sm mb-0 fs-0 table-striped table-hover">
							<thead class="text-800 bg-light">
								<tr>
									<th class="pe-1 align-middle">Tên đăng nhập</th>
									<th class="pe-1 align-middle">Địa chỉ IP</th>
									<th class="pe-1 align-middle">Hành động</th>
									<th class="pe-1 align-middle">Trạng thái</th>
									<th class="pe-1 align-middle">Thời gian</th>
								</tr>
							</thead>
							<tbody class="list">
								@foreach (var item in Model.PaginatedResult.Data)
								{
									<tr class="align-middle">
										<td class="text-nowrap">
											<span class="mb-0 fw-semi-bold">@Html.DisplayFor(modelItem => item.UserName)</span>
										</td>
										<td class="text-nowrap">
											<span class="mb-0 text-nowrap">@Html.DisplayFor(modelItem => item.FromIP)</span>
										</td>
										<td class="text-nowrap">
											<span class="mb-0 text-nowrap">@Html.DisplayFor(modelItem => item.UserAction)</span>
										</td>
										<td class="text-nowrap align-middle">
											<span class="mb-0 text-nowrap@(item.ActionStatus != "Thành công" ? " text-danger" : " text-600")">@Html.DisplayFor(modelItem => item.ActionStatus)</span>
										</td>
										<td class="text-nowrap align-middle">
											<span class="lh-base font-base fw-normal d-block">@item.CrDateTime.ToStringFormat()</span>
										</td>
									</tr>
								}
							</tbody>
						</table>
					}
					else
					{
						<div class="text-center not-found">
							<p class="mt-3">Không tìm thấy dữ liệu.</p>
						</div>
					}
				</div>
			</div>
			@await Html.PartialAsync("_PaginationPartial", Model.PagingInput)
		</div>
	</div>
</div>